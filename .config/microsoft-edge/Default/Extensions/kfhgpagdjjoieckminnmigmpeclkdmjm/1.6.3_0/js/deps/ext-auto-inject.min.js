/*!
 * ExtAutoInject
 * Part of the ExtHelpers project
 * @version  v1.7.2
 * @author   Gerrproger
 * @license  MIT License
 * Repo:     http://github.com/gerrproger/ext-helpers
 * Issues:   http://github.com/gerrproger/ext-helpers/issues
 */(function(r,h){"use strict";typeof module=="object"&&typeof module.exports=="object"?module.exports=h(r,document):typeof define=="function"&&define.amd?define(null,function(){h(r,document)}):r.ExtAutoInject=h(r,document)})(typeof window<"u"?window:this,function(r,h){"use strict";class p{constructor(t,n){if(this.isBackgroundScript=!!(chrome.extension.getBackgroundPage&&chrome.extension.getBackgroundPage()===r),this.manifest=chrome.runtime.getManifest(),!this.isBackgroundScript&&(n=t),n&&typeof n!="function")throw new Error("Callback should be a function!");if(this.isBackgroundScript&&t&&typeof t!="string"&&typeof t!="object")throw new Error("Ignore parameter should be a sting (match pattern) or a regular expression or an array of strings/expressions!");return new Promise(c=>{const i=l=>{n&&n.call(r,l),c(l)};this.isBackgroundScript?this._background(t,i):this._content(i)})}_background(t,n){const c=(e,s)=>{const u=o=>{s.files[o]&&s.files[o].forEach(a=>{chrome.tabs[o==="js"?"executeScript":"insertCSS"](e,{file:a,allFrames:s.allFrames,matchAboutBlank:s.matchAboutBlank})})};chrome.tabs.executeScript(e,{code:`window.extAutoInjectInfo=${JSON.stringify(this.constructor.info)};window.extAutoInjectMatches=${JSON.stringify(s.matches)};`,allFrames:s.allFrames,matchAboutBlank:s.matchAboutBlank},()=>{if(chrome.runtime.lastError)switch(chrome.runtime.lastError.message){case"Cannot access contents of the page. Extension manifest must request permission to access the respective host.":case"The extensions gallery cannot be scripted.":case"The frame was removed.":case"The tab was closed.":return;default:throw new Error(chrome.runtime.lastError.message)}u("js"),u("css")})},i=e=>{const s={allFrames:e.all_frames,matchAboutBlank:e.match_about_blank,matches:e.matches,files:{}},u=o=>{Array.isArray(e[o])&&(s.files[o]=e[o].filter(a=>!f.some(m=>{if(a.match(m))return!0})))};return u("js"),u("css"),s},l=()=>{this.manifest.content_scripts.forEach(e=>{const s=i(e);chrome.tabs.query({url:e.matches},u=>{u&&u.forEach(o=>{let a=[];e.exclude_matches&&(a=a.concat(e.exclude_matches)),e.exclude_globs&&(a=a.concat(e.exclude_globs)),!a.some(m=>{if(m=this.constructRegExp(m),o.url.match(m))return!0})&&(e.include_globs&&!e.include_globs.some(d=>{if(d=this.constructRegExp(d),o.url.match(d))return!0})||c(o.id,s))})})})},g=(e,s)=>{r.extAutoInjectInfo={date:new Date,version:this.manifest.version,previousVersion:s,reason:e},s&&n(this.constructor.info),t!==!1&&l()};let f=typeof t=="object"||typeof t=="string"?Array.isArray(t)?t:[t]:[];f=f.map(e=>typeof e=="string"?this.constructRegExp(e):e),chrome.runtime.onInstalled.addListener(e=>{g(e.reason,e.previousVersion)}),setTimeout(()=>{!this.constructor.info&&g("enabled")},1e3)}_content(t){const n=c=>{c.source!==r||!c.data.extAutoInjected||(r.removeEventListener("message",n),r.extAutoInjectInfo=c.data.extAutoInjected,t(this.constructor.info))};r.postMessage({extAutoInjected:this.constructor.info},"*"),setTimeout(()=>{r.addEventListener("message",n)},0)}static get pageMatches(){const t=r.location.href,n=r.extAutoInjectMatches;return n?n.some(c=>{if(c==="<all_urls>")return!0;const i=this.constructRegExp(c);return!!t.match(i)}):!0}static get info(){return r.extAutoInjectInfo}static constructRegExp(t){return new RegExp(`^${t.replace(/\?/g,".").replace(/\*\.?/g,".*").replace(/\//g,"/").replace(/\./g,".")}$`)}}return p});
